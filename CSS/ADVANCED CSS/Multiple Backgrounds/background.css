/*

CSS Multiple Backgrounds
CSS allows you to add multiple background images for an element, through the background-image property.

The different background images are separated by commas, and the images are stacked on top of each other, where the first image is closest to the viewer.

The following example has two background images, the first image is a flower (aligned to the bottom and right) and the second image is a paper background (aligned to the top-left corner):

*/

#example1{
	height:500px;
	width:400px;
	color:white;
	background-image:url('./background2.png'),url('./background1.png');
	background-position:right bottom,right bottom;
	background-size:100px,400px 500px;
	background-repeat:no-repeat,no-repeat;
}

/*
	background shorthand
Multiple background images can be specified using either the individual background properties (as above) or the background shorthand property.

The following example uses the background shorthand property (same result as example above):

Example
#example1 {
  background: url(img_flwr.gif) right bottom no-repeat, url(paper.gif) left top repeat;
}

*/
#example2{
	background:url('./background2.png') right bottom  no-repeat,url('./background1.png') left top no-repeat ;
	background-size:100px,500px;
	width:500px;
	height:500px;
	color:white;
}
#example3{
	background:url('./background1.png');
	background-size:cover;
	height:500px;
	color:white;
	
}
#example4{
	background:url('./background1.png');
	background-size:content;
	height:500px;
	color:white;
	
}

/*

The two other possible values for background-size are contain and cover.

The contain keyword scales the background image to be as large as possible (but both its width and its height must fit inside the content area). As such, depending on the proportions of the background image and the background positioning area, there may be some areas of the background which are not covered by the background image.

The cover keyword scales the background image so that the content area is completely covered by the background image (both its width and height are equal to or exceed the content area). As such, some parts of the background image may not be visible in the background positioning area.

The following example illustrates the use of contain and cover:

Example
#div1 {
  background: url(img_flower.jpg);
  background-size: contain;
  background-repeat: no-repeat;
}

#div2 {
  background: url(img_flower.jpg);
  background-size: cover;
  background-repeat: no-repeat;
}
Define Sizes of Multiple Background Images
The background-size property also accepts multiple values for background size (using a comma-separated list), when working with multiple backgrounds.

The following example has three background images specified, with different background-size value for each image:

Example
#example1 {
  background: url(img_tree.gif) left top no-repeat, url(img_flwr.gif) right bottom no-repeat, url(paper.gif) left top repeat;
  background-size: 50px, 130px, auto;
}

*/

#example5
{

	background:url('./background1.png') no-repeat center fixed;
	height:1000px;
	color:white;
}


/*

Full Size Background Image
Now we want to have a background image on a website that covers the entire browser window at all times.

The requirements are as follows:

Fill the entire page with the image (no white space)
Scale image as needed
Center image on page
Do not cause scrollbars
The following example shows how to do it; Use the <html> element (the <html> element is always at least the height of the browser window). Then set a fixed and centered background on it. Then adjust its size with the background-size property:

Example
html {
  background: url(img_man.jpg) no-repeat center fixed;
  background-size: cover;
}

*/

