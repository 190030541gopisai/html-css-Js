/*

The position property specifies the type of positioning method used for an element (static, relative, fixed, absolute or sticky).

*/

/*

The position Property'
The position property specifies the type of positioning method used for an element.

There are five different position values:

static
relative
fixed
absolute
sticky


Elements are then positioned using the top, bottom, left, and right properties. However, these properties will not work unless the position property is set first. They also work differently depending on the position value.
*/

/*

position: static;
HTML elements are positioned static by default.

Static positioned elements are not affected by the top, bottom, left, and right properties.

An element with position: static; is not positioned in any special way; it is always positioned according to the normal flow of the page:

This <div> element has position: static;

*/
body{
	height:2000px;
	background:powderblue;
}

div{
	margin-top:10px;
}
div.static{
	position:static;
	border:3px solid #73AD21;
}

div.relative{
	left: 30px;
	position:relative;
	border:3px solid red;
}

div.fixed {
  position: fixed;
  bottom: 0;
  right: 0;
  width: 300px;
  border: 3px solid #73AD21;
}

/*

position: absolute;
An element with position: absolute; is positioned relative to the nearest positioned ancestor (instead of positioned relative to the viewport, like fixed).

However; if an absolute positioned element has no positioned ancestors, it uses the document body, and moves along with page scrolling.

Note: A "positioned" element is one whose position is anything except static.

Here is a simple example:

*/
div.absolute {
  position: absolute;
  top: 80px;
  right: 0;
  width: 200px;
  height: 100px;
  border: 3px solid #73AD21;
}



/*

position: sticky;
An element with position: sticky; is positioned based on the user's scroll position.

A sticky element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it "sticks" in place (like position:fixed).


Note: Internet Explorer does not support sticky positioning. Safari requires a -webkit- prefix (see example below). You must also specify at least one of top, right, bottom or left for sticky positioning to work.

In this example, the sticky element sticks to the top of the page (top: 0), when you reach its scroll position.

Example
div.sticky {
  position: -webkit-sticky;  Safari 
  position: sticky;
  top: 0;
  background-color: green;
  border: 2px solid #4CAF50;
}

*/


div.sticky{
	position: -webkit-sticky; /* Safari */
 	position: sticky;
  	top: 0;
	height:30px;
  	background-color: green;
  	border: 2px solid #4CAF50;
}

/*

Overlapping Elements

https://www.w3schools.com/css/css_positioning.asp

An element with greater stack order is always in front of an element with a lower stack order.
*/

